cd('E:\实验\结果');%计算结果存放的地方
Mwenjian=dir('E:\实验\2\*.mat');%读取文件路径下的所有.mat格式的文件，并以列表的形式呈现
rootTpath=('E:\实验\2\');%读取测试文件
for a3=1:10%循环是1-28，因为有28个训练样本
    load(['E:\实验\2\',Mwenjian(a3).name]);%这个for循环是一次性将所有样本都读取出来
    moban{a3}=C1;
end
for a0=1:10%循环是1-28，测试样本也是来自28个人
      folderName{a0}=['result',int2str(a0)];%创建测试结果存放文件夹 9-10行
      mkdir(folderName{a0});
      Tpath0=strcat(rootTpath,int2str(a0),'\');
      Tpath=strcat(rootTpath,int2str(a0),'\*.mat');
      Twenjian=dir(Tpath);%11-13行构建测试文件读取路径，并且读取.mat文件列表
      for a1=1:14%导入测试数据（1-14是因为测试文件夹下有14个文件）
          load([Tpath0,Twenjian(a1).name]);%载入测试文件
          A=C1;%读取叠加矩阵
          H=zeros(400,40);%存放标签
          H1=zeros(400,40);%存放匹配系数
          for b=1:400
              for c=1:40
                  %disp(b);
                    D=zeros(3,3);
                    b1=(b-1)*3+1;
                    b2=(b-1)*3+2;
                    b3=(b-1)*3+3;
                    c1=(c-1)*3+1;
                    c2=(c-1)*3+2;
                    c3=(c-1)*3+3;
                    D(1,1)=A(b1,c1);
                    D(1,2)=A(b1,c2);
                    D(1,3)=A(b1,c3);
                    D(2,1)=A(b2,c1);
                    D(2,2)=A(b2,c2);
                    D(2,3)=A(b2,c3);%这个主要是将大矩阵对应位置的3*3区域的值取出来放到D中（30-38行）
                    D(3,1)=A(b3,c1);
                    D(3,2)=A(b3,c2);
                    D(3,3)=A(b3,c3);
                    D1=reshape(D,1,9);
                    d1=all(D1); 
                    F=zeros(1,28);%存放于28个样本对应位置比对结果
                    for a2=1:28  %依次读取28个样本
                        B=moban{a2};
                        %AVG3=AVG0(a2,:);
                        E=zeros(3,3);
                        E(1,1)=B(b1,c1);
                        E(1,2)=B(b1,c2);
                        E(1,3)=B(b1,c3);
                        E(2,1)=B(b2,c1);
                        E(2,2)=B(b2,c2);
                        E(2,3)=B(b2,c3);
                        E(3,1)=B(b3,c1);
                        E(3,2)=B(b3,c2);
                        E(3,3)=B(b3,c3);
                        E1=reshape(E,1,9);
                        e1=all(E1);
                            if(d1==0&&e1==0)
                                F(1,a2)=1;
                            elseif(d1~=0&&e1==0)
                                F(1,a2)=0;
                            elseif(d1==0&&e1~=0)
                                F(1,a2)=0;
                            else
                                %xishu=corrcoef(D1,E1); %相关系数
                                 G=[D1;E1];
                                xishu=1-pdist(G,'cosine');%夹角余弦
                                 if(isempty(xishu)==1)%判断计算结果是不是Nan
                                    F(1,a2)=0;
                                 else
                                    F(1,a2)=xishu;
                                end
                            end
                    end
                       [f,fl]=max(F);%寻找F中最大系数的最大值，并获取位置信息
                       fl1=find(F==f);%统计F中最大值的个数，若有多个最大值fl1则大于1
                       if(length(fl1)>1)
                           H(b,c)=0;%如果存在多个最大值，则叠加矩阵中该位置处的3*3矩阵的匹配结果为0；
                       elseif(length(fl1)==1)
                            H(b,c)=fl;%如果只存在1个最大值，那么该最大值在F中对应的列号就是该处3*3矩阵对应的标签
                            H1(b,c)=f;%存放夹角余弦值结果
                       end
                       
              end
                      
          end
                       baocun=strcat(folderName{a0},'\');
                       save([baocun,int2str(a1)],'H','H1');%将标签和夹角余弦值存放下来
      end
end
